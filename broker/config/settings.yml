# This file should not be used in deployed environments. Instead, set
# the SETTINGS_PATH environment variable to point to a configuration
# file that contains these settings.
<%
const path = require('path');
const os = require('os');

const log_path = path.join(__dirname, '../..', 'logs', `${process.env.NODE_ENV}.log`)

const broker_name = 'service-fabrik-broker';
const ip = '10.0.2.2';
const internal = {
  protocol: 'https',
  ip: ip,
  port: 9293
};
const external = {
  protocol: 'https',
  host: `${broker_name}.bosh-lite.com`,
  port: 9292
};
const report = {
  protocol: 'https',
  ip: ip,
  port: 9294
};
const hook = {
  protocol: 'https',
  ip: ip,
  port: 9295
};
const redirect_uri = `${external.protocol}://${external.host}/manage/auth/cf/callback`;

const cloudProviders = {
  openstack: {
    authUrl: 'https://myopenstackcloud.com:5000',
    keystoneAuthVersion: 'v3',
    domainName: 'MYDOMAIN',
    tenantName: 'service-fabrik',
    tenantId: 'xxxxxxxxxxxxxxxxxx',
    region: 'eu-de-1',
    username: 'service-fabrik-broker-backup-service-fabrik',
    password: 'xxxxxxxxxxxxxxxxxxx',
    containerPrefix: 'cf.service-fabrik.myopenstack.com-service-fabrik'
  },
  amazon: {
    region: 'eu-central-1',
    keyId: 'xxxxxxxxxxxxxxxxxxx',
    key: 'xxxxxxxxxxxxxxxxxx',
    max_retries: 10,
    containerPrefix: 'cf.service-fabrik.myaws.com-service-fabrik'
  },
  azure: {
    subscription_id: 'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa',
    resource_group: 'rg-abc',
    client_id: 'ccccccccc-cccc-cccc-cccc-cccccccccccc',
    client_secret: 'xxxxxxxxxxxxxx',
    tenant_id: 'tttttttt-tttt-tttt-tttt-tttttttttttt',
    storageAccount: 'storageacc',
    storageAccessKey: 'xxxxxxxxxxxxxxxxxx',
    container: 'samplecontainer'
  },
  gcp: {
    projectId: 'my-gcp-dev',
    credentials: {
      "type": "service_account",
      "project_id": "my-gcp-dev",
      "private_key_id": "kkkkkkkk",
      "private_key": "-----BEGIN PRIVATE KEY-----\nlllllllllllllllllllllll\n-----END PRIVATE KEY-----\n",
      "client_email": "my-test-user@my-gcp-dev.iam.myaccounts.com",
      "client_id": "000000000000000",
      "auth_uri": "https://myaccounts.com/oauth2/auth",
      "token_uri": "https://myaccounts.com/oauth2/token",
      "auth_provider_x509_cert_url": "https://myaccounts.com/oauth2/v1/certs",
      "client_x509_cert_url": "https://myaccounts.com/v1/metadata/x509/my-test-user%40my-gcp-dev.iam.myaccounts.com" 
    },
    container: 'samplecontainer'
  }
};
const cloudProvider = cloudProviders.openstack;

const virtualHostCloudProviders = {
  openstack: {
    authUrl: 'https://myopenstackcloud.com:5000',
    keystoneAuthVersion: 'v3',
    domainName: 'MYDOMAIN',
    tenantName: 'service-fabrik',
    tenantId: 'xxxxxxxxxxxxxxxxxx',
    region: 'eu-de-1',
    username: 'service-fabrik-rabbitmq-backup-service-fabrik',
    password: 'xxxxxxxxxxxxxxxxxx',
    containerPrefix: 'cf.service-fabrik.myopenstack.com-service-fabrik'
  },
  amazon: {
    region: 'eu-central-1',
    keyId: 'xxxxxxxxxxxxxxxxxx',
    key: 'xxxxxxxxxxxxxxxxxx',
    containerPrefix: 'cf.service-fabrik.myaws.com-service-fabrik'
  },
  azure: {
    subscription_id: 'aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa',
    resource_group: 'rg-abc',
    client_id: 'ccccccccc-cccc-cccc-cccc-cccccccccccc',
    client_secret: 'abc4356=',
    tenant_id: 'tttttttt-tttt-tttt-tttt-tttttttttttt',
    storageAccount: 'storageacc',
    storageAccessKey: 'xxxxxxxxxxxxxxxxxx',
    container: 'rabbitmqsamplecontainer'
  },
  gcp: {
    projectId: 'my-gcp-dev',
    credentials: {
      "type": "service_account",
      "project_id": "my-gcp-dev",
      "private_key_id": "kkkkkkkk",
      "private_key": "-----BEGIN PRIVATE KEY-----\nlllllllllllllllllllllll\n-----END PRIVATE KEY-----\n",
      "client_email": "my-test-user@my-gcp-dev.iam.myaccounts.com",
      "client_id": "000000000000000",
      "auth_uri": "https://myaccounts.com/oauth2/auth",
      "token_uri": "https://myaccounts.com/oauth2/token",
      "auth_provider_x509_cert_url": "https://myaccounts.com/oauth2/v1/certs",
      "client_x509_cert_url": "https://myaccounts.com/v1/metadata/x509/my-test-user%40my-gcp-dev.iam.myaccounts.com" 
    },
    container: 'samplecontainer'
  }
};
const virtualHostCloudProvider = virtualHostCloudProviders.openstack;

%>---
defaults: &defaults
  ####################
  # GENERAL SETTINGS #
  ####################
  broker_name: <%= broker_name %>
  deployment_name: service-fabrik
  release_name: service-fabrik
  release_version: latest
  username: broker
  password: ~
  broker_ip: <%= ip %>
  skip_ssl_validation: true
  log_path: <%= log_path %>
  log_level: info
  colorize_log: false
  sys_log_level: info
  enable_circuit_breaker: true
  enable_swarm_manager: true
  enable_bosh_rate_limit: false # Global switch to enable/disable rate limiting against BOSH directors
  feature:
    ServiceInstanceAutoUpdate: true #Switch to turn on / turn off schedule_update feature
    EnableSecurityGroupsOps: true
  # this timeout is set to 175 secs by default because CF has a default timeout of 180 secs
  http_timeout: 175000
  deployment_action_timeout: 80000
  multi_az_enabled: false
  broker_drain_message: 'BROKER_DRAIN_INITIATED'
  ##############################
  # EXTERNAL ENDPOINT SETTINGS #
  ##############################
  external: &external
    log_event: true
    event_type: SF.API_EVENT
    trust_proxy: 2
    port: <%= external.port %>
    protocol: <%= external.protocol %>
    host: <%= external.host %>
    cookie_secret: 'cookie_secret'
    cookie_secure: <%= external.protocol === 'https' %>
    session_expiry: 86400
    api_requires_admin_scope: false

  ##############################
  # INTERNAL ENDPOINT SETTINGS #
  ##############################
  internal: &internal
    log_event: true
    event_type: SF.BROKER_EVENT
    domain_socket:
      path: /tmp/var
      fwd_events: true
    port: <%= internal.port %>
    ip: <%= internal.ip %>
    protocol: <%= internal.protocol%>
    host: <%= `${internal.ip}:${internal.port}` %>
    ssl:
      key: <%= certificate('broker.key') %>
      cert: <%= certificate('broker.crt') %>
  ####################
  # APSARADB SETTINGS #
  ####################
  apsaradb:
    access_key: 'XXXXXXX'
    secret_key: 'XXXXXXX'
    region: 'XXXXXXX'
    vpc_id: 'XXXXXXX'
    vswitch_id: 'XXXXXXX'
    account_name: 'XXXXXXX'
    account_password: 'XXXXXXX'
    db_name: 'XXXXXXX'

  ##############################
  # APISERVER SETTINGS #
  ##############################
  apiserver:
    ip: '10.244.14.252'
    port: 8443
    encryption:
      key: 'ABCDEFGHABCDEFGHABCDEFGHABCDEFGH'
      initialization_vector: 'ABCDEFGHABCDEFGH'
    certificate: <%= certificate('apiserver.crt') %>
    private_key: <%= certificate('apiserver.key') %>
    crds:
      "deployment.servicefabrik.io_v1alpha1_directors.yaml": <%=base64_template('crds/deployment.servicefabrik.io_v1alpha1_directors.yaml') %>
      "deployment.servicefabrik.io_v1alpha1_apsaras.yaml": <%=base64_template('crds/deployment.servicefabrik.io_v1alpha1_apsaras.yaml') %>
      "deployment.servicefabrik.io_v1alpha1_kubes.yaml": <%=base64_template('crds/deployment.servicefabrik.io_v1alpha1_kubes.yaml') %>
      "lock.servicefabrik.io_v1alpha1_deploymentlocks.yaml": <%= base64_template('crds/lock.servicefabrik.io_v1alpha1_deploymentlocks.yaml') %>
      "backup.servicefabrik.io_v1alpha1_defaultrestores.yaml": <%= base64_template('crds/backup.servicefabrik.io_v1alpha1_defaultrestores.yaml') %>
      "bind.servicefabrik.io_v1alpha1_directorbinds.yaml": <%= base64_template('crds/bind.servicefabrik.io_v1alpha1_directorbinds.yaml') %>
      "bind.servicefabrik.io_v1alpha1_apsarabinds.yaml": <%= base64_template('crds/bind.servicefabrik.io_v1alpha1_apsarabinds.yaml') %>
      "bind.servicefabrik.io_v1alpha1_kubebinds.yaml": <%= base64_template('crds/bind.servicefabrik.io_v1alpha1_kubebinds.yaml') %>
      "bind.servicefabrik.io_v1alpha1_dockerbinds.yaml": <%= base64_template('crds/bind.servicefabrik.io_v1alpha1_dockerbinds.yaml') %>
      "backup.servicefabrik.io_v1alpha1_defaultbackups.yaml": <%= base64_template('crds/backup.servicefabrik.io_v1alpha1_defaultbackups.yaml') %>
      "deployment.servicefabrik.io_v1alpha1_dockers.yaml": <%= base64_template('crds/deployment.servicefabrik.io_v1alpha1_dockers.yaml') %>
      "deployment.servicefabrik.io_v1alpha1_virtualhosts.yaml": <%= base64_template('crds/deployment.servicefabrik.io_v1alpha1_virtualhosts.yaml') %>
      "bind.servicefabrik.io_v1alpha1_virtualhostbinds.yaml": <%= base64_template('crds/bind.servicefabrik.io_v1alpha1_virtualhostbinds.yaml') %>

  ##############################
  # REPORT ENDPOINT SETTINGS #
  ##############################
  report: &report
    log_event: true
    event_type: SF.REPORT
    port: <%= report.port %>
    ip: <%= report.ip %>
    protocol: <%= report.protocol%>
    host: <%= `${report.ip}:${report.port}` %>
    ssl:
      key: <%= certificate('broker.key') %>
      cert: <%= certificate('broker.crt') %>
  

  ####################
  # ETCD SETTINGS #
  ####################
  etcd:
    url:
      - 'localhost:2379'
    ssl:
      ca: <%= certificate('etcd-ca.crt') %>
      crt: <%= certificate('etcd.crt') %>
      key: <%= certificate('etcd.key') %>

  hook:
    port: <%= hook.port %>
    ip: <%= hook.ip %>
    protocol: <%= hook.protocol%>
    host: <%= `${hook.ip}:${hook.port}` %>
  
  #############################
  # DEPLOYMENT HOOKS SETTINGS #
  #############################
  deployment_hooks:
    username: 'hook'
    password: 'hook-secret'
    port: <%= hook.port %>
    ip: <%= hook.ip %>
    protocol: <%= hook.protocol%>
    host: <%= `${hook.ip}:${hook.port}` %>
  
  ####################
  # MONGODB SETTINGS #
  ####################
  mongodb:
    provision:
      #plan_id: bc158c9a-7934-401e-94ab-057082a5073f
      network_index: 1
    deployment_name: service-fabrik-mongodb
    retry_connect:
      max_attempt: 5 # MaxAttempts of 8 with a backoff factor of 2 leads to last attempt ~ at 4.3 hr from first error occurence time
      min_delay: 120000 # min 2 mins
    #url: mongodb://localhost:27017/service-fabrik #'mongodb://user:pass@localhost:port/database'
    record_max_fetch_count: 300  # Max number of records that can be fetched at a time
    backup:
      schedule_interval: 0 12 * * * #Backup schedule interval for service fabrik DB
      status_check_every: 120000 # (ms) Check the status of service fabrik backup once every 2 mins
      backup_timeout_time: 7200000 # (ms) Service Fabrik backup must finish within this timeout time (2 hrs)

  ######################
  # SCHEDULER SETTINGS #
  ######################
  scheduler:
    job_types: ScheduledBackup, BluePrintJob, ScheduledOobDeploymentBackup, OperationStatusPoller, BackupReaper, ServiceInstanceAutoUpdate, DbCollectionReaper
    process_every: '3 minutes' # Process every 3 min by default
    run_with_web_process: true #if this flag is either undefined or set to true, then agenda scheduler can run along within web process
    max_workers: 2 # Can throttle the number of job workers to a value lesser than default number of cpus
    max_concurrency: 30
    default_concurrency: 20
    start_delay: 120000 # Scheduler start must be delayed for DB connections to happen.
    default_lock_lifetime: 180000
    maintenance_check_interval: 90000 #every (ms) scheduler checks for maitenance mode
    agenda_collection: agendaJobDetails #Collectin name that is to be used by agenda scheduler
    maintenance_mode_time_out: 36000000 # (ms) - 60 minutes wait for sf deployment to complete
    downtime_maintenance_phases:
      - 'BROKER_DRAIN_INITIATED'
      - 'BROKER_REGISTRATION_INITIATED'
      - 'SF_MONGODB_UPDATE_INITIATED'
    jobs:
      reschedule_delay: '20 minutes from now'
      scheduled_backup:
        max_attempts: 3 # Incase of a conflicting operation (ex. update) in progress, the backup is rescheduled. This count defines upper limit on the number of attempts the job is rescheduled in case of conflict.
      service_instance_update:
        max_attempts: 3  #In case of an error while initiating a backup, it is retried again after reschedule_delay.
                         #This defines the upper limit on # of retries. # of retries is not applicable in case a backup is in progress in which case it tries over and over.
        run_every_xdays: 7 #every 7 days update is checked
        should_start_after_hr: 8 #Service Instance update Job will be scheduled in a randomized hr between job_start_hr & job_end_hr
        should_start_before_hr: 17
        should_start_after_min: 0 #Service Instance update Job will be scheduled in a randomized hr between job_start_hr & job_end_hr
        should_start_before_min: 59
        time_zone: 'Asia/Kolkata' #Timezone in which the jobs will be running
    system_jobs:
      - name: 'service-fabrik-mongodb'
        type: ScheduledOobDeploymentBackup
        interval: '0 12 * * *' #Backup schedule interval for service fabrik DB
        job_data:
          type: online
          deployment_name: service-fabrik-mongodb
          trigger: scheduled
          container: service-fabrik-mongodb
          delete_delay: 1000 #delay in processing between two tasks (in millisecond)
        enabled: true
      - name: 'Backup_Reaper'
        type: BackupReaper
        interval: '0 1 * * *'
        job_data:
          delete_delay: 1000 #delay in processing between two tasks (in millisecond)
        enabled: true
      - name: 'DbCollection_Reaper'
        type: DbCollectionReaper
        interval: '0 2 * * *'
        job_data:
          reap_collections:
            - name : JobRunDetail
              retention_in_days: 60
            - name : EventDetail
              retention_in_days: 90
        enabled: true

  #######################
  # MONITORING SETTINGS #
  #######################
  monitoring:
    success_state: 'ok'
    success_metric: 0
    failure_state: 'critical'
    failure_metric: 1
    warning_state: 'warning'
    inprogress_state: 'in progress'
    inprogress_metric: 2
    event_name_prefix: broker.0.service-fabrik
    include_response_body: false
    events_logged_in_db: create_backup, update_instance
    unauthorized:
      http_status:
      - 401
      - 403
      event_name: 'unauthorized_access'
      description: 'Unauthorized access to service attempted'
      tags:
      - security
      - unauthorized
      include_response_body: true
  riemann:
    host: 127.0.0.1
    port: 1234
    protocol : tcp
    show_errors: false
    prefix: CF
    log_additional_event: true
    http_status_codes_to_be_skipped:
    - 400
    - 409
  ###################
  # QUOTA MANAGEMENT SETTINGS #
  ###################
  quota:
    enabled: false
    whitelist:
      - 'CF_UAA'
      - 'CF_provisioning'
    oauthDomain: https://myauth-domain.com
    serviceDomain: https://my-tenant-onboarding.com
    username: sb-service-client!t1
    password: quota_password
  ###################
  # BACKUP SETTINGS #
  ###################
  backup:
    retention_period_in_days: 14
    max_num_on_demand_backup: 2
    status_check_every: 120000 # (ms) Check the status of backup once every 2 mins
    retry_delay_on_error: 60000 # (ms) In case of unlock failure 3 retry attempts will be done with this configured delay in exponential manner
    lock_check_delay_on_restart: 5000 #(ms) On restart of service fabrik queries all deployments to see if there is a lock on it. This delay ensures each call is spaced with this delay.
    backup_restore_status_poller_timeout: 86400000 # (ms) Deployment backup/restore must finish within this timeout time (24 hrs)
    backup_restore_status_check_every: 120000 # (ms) Check the status of deployment backup/restore once every 2 mins
    abort_time_out: 300000 #(ms) Timeout time for abort of backup to complete
    consecutive_backup_failure_sla_count: 3 # Max allowed no backup days in a row
    num_of_allowed_restores: 10 # Number of allowed restores in restore_history_days
    restore_history_days: 30 # Max allowed restores  10 in 30 days
    reschedule_backup_delay_after_restore: 3 #(minute)
    transaction_logs_delete_buffer_time: 10 #(minute)

    provider:
      name: openstack
      authUrl: <%= cloudProvider.authUrl %>
      keystoneAuthVersion: <%= cloudProvider.keystoneAuthVersion %>
      domainName: <%= cloudProvider.domainName %>
      projectDomainName: <%= cloudProvider.domainName %>
      tenantId: <%= cloudProvider.tenantId %>
      region: <%= cloudProvider.region %>
      username: <%= cloudProvider.username %>
      password: <%= cloudProvider.password %>
      strictSSL: false
      container: <%= cloudProvider.containerPrefix %>-broker

  #################################
  # VIRTUAL HOST MANAGER SETTINGS #
  #################################
  virtual_host:
    provider:
      name: openstack
      authUrl: <%= virtualHostCloudProvider.authUrl %>
      keystoneAuthVersion: <%= virtualHostCloudProvider.keystoneAuthVersion %>
      domainName: <%= virtualHostCloudProvider.domainName %>
      projectDomainName: <%= virtualHostCloudProvider.domainName %>
      tenantId: <%= virtualHostCloudProvider.tenantId %>
      region: <%= virtualHostCloudProvider.region %>
      username: <%= virtualHostCloudProvider.username %>
      password: <%= virtualHostCloudProvider.password %>
      strictSSL: false
      container: <%= virtualHostCloudProvider.containerPrefix %>-rabbitmq

  #############################
  # CLOUD-CONTROLLER SETTINGS #
  #############################
  cf: &cf
    url: https://api.bosh-lite.com
    username: admin
    password: admin
  
  #############################
  # CREDHUB SETTINGS #
  #############################
  cred_provider:
    credhub_url: https://10.0.3.11:8443/api/
    credhub_uaa_url: https://10.0.3.11:8443
    credhub_client_id:  credhub-admin
    credhub_client_secret: 
    credhub_username: admin
    credhub_user_password: admin

  ###################
  # DOCKER SETTINGS #
  ###################
  docker: &docker
    url: unix:///var/run/docker.sock # how to connect the broker to docker
    allocate_docker_host_ports: true # if true the broker will allocate fixed port mappings for the containers
    volume_driver: local
  
  #List of add on jobs that are to be added onto each service vm
  service_addon_jobs:
  - iptables-manager
  
  #####################
  # DIRECTOR SETTINGS #
  #####################
  directors:
  - &director
    primary: true
    support_create: false
    name: bosh
    cpi: warden_cpi
    url: https://192.168.50.4:25555
    username: admin
    password: admin
    skip_ssl_validation: true
    default_task_poll_interval: 10000
    lock_deployment_max_duration:  86400 # lock ttl for deployments in seconds. Its kept at 24 hrs - 60 * 60 * 24
    max_workers: 24
    policies:
      user:
        create:
          max_workers: 5
        update:
          max_workers: 7
      scheduled:
        max_workers: 12
    infrastructure: &director_infrastructure
      stemcell:
        alias: ubuntu-trusty
        name: bosh-warden-boshlite-ubuntu-trusty-go_agent
        version: latest
      segmentation:
        network_name: default
        # calculate capacity based on the network range
        capacity: -1
        offset: 1
        size: 8
      networks:
      - &default_network
        name: default
        type: manual
        subnets:
        - { range: 10.244.10.0/24, az: z1, cloud_properties: { name: random } }
        - { range: 10.244.11.0/24, az: z2, cloud_properties: { name: random } }
        - { range: 10.244.12.0/24, az: z3, cloud_properties: { name: random } }
    uaa:
      uaa_auth: false #make it true if bosh uses UAA for authentication
      uaa_url: '' #provide complete uaa url here.,e.g., https://192.168.48.6:8443
      client_id: '' #Assuming client credential grant being used, provide client id here
      client_secret: '' #provide corrsponding client secret 
  - cpi: warden_cpi
    url: https://192.168.50.4:25555
    username: admin
    password: admin
    primary: true
    support_create: true
    name: bosh-sf
    skip_ssl_validation: true
    default_task_poll_interval: 10000
    lock_deployment_max_duration:  86400 # lock ttl for deployments in seconds. Its kept at 24 hrs - 60 * 60 * 24
    infrastructure: *director_infrastructure
  ########################################
  # AGENTS DEFINITIONS                   #
  ########################################
  agents: &agents
    blueprint: &agent_blueprint
      version: '1'
      hostname: <%= process.env.BLUEPRINT_AGENT_HOSTNAME || '~' %>
      auth:
        username: agent
        password: secret
      supported_features:
      - state
      - lifecycle
      - credentials
      - backup
      - restore
      - lifecycle.blueprint
      provider: &provider_blueprint
        name: boshlite
        container: blueprint_backup
        credhub_key: '/service-fabrik/iaas/blueprint'
        credhub_username: blueprint-admin
        credhub_user_password: blueprint-secret
    rabbitmq: &agent_rabbitmq
      version: '1'
      hostname: <%= process.env.RABBITMQ_AGENT_HOSTNAME || '~' %>
      auth:
        username: agent
        password: secret
      supported_features:
      - state
      - lifecycle
      - credentials
      - multi_tenancy
  ####################
  # SERVICES CATALOG #
  ####################
  services:
  #############################
  # ALICLOUD APSARADB SERVICE #
  #############################
  - id: '34731fb8-7b84-4f57-914f-c3d55d793dd4'
    name: 'apsaradb'
    description: &description 'Alicloud Apsara DB service provisioned the Service Fabrik'
    bindable: true
    tags:
    - 'apsara'
    - 'no-not-use'
    metadata:
      displayName: 'Apsara'
      longDescription: *description
      providerDisplayName: 'AliCloud Apsara DB'
      documentationUrl: 'https://alicloud.com/'
      supportUrl: 'https://alicloud.com/'
    dashboard_client:
      id: 'service-fabrik-apsara-client'
      secret: 'service-fabrik-apsara-secret'
      redirect_uri: <%= redirect_uri %>
    plan_updateable: true
    supported_platform:
    - k8s
    - cf
    plans:
    ###########################
    #      SERVICE PLANS      #
    ###########################
    - id: '366c5078-df6e-427d-8fb2-c76af50c0f56'
      name: 'v1.0'
      free: true
      manager:
        name: 'apsara'
        async: true
        resource_mappings:
          resource_group: 'deployment.servicefabrik.io'
          resource_type: 'apsaras'
          bind:
            resource_group: 'bind.servicefabrik.io'
            resource_type: 'apsarabinds'
      description: 'Alicloud Apsara DB service provisioned the Service Fabrik (for non-productive usage)'
      metadata:
        costs:
        - amount:
            usd: 0.0
          unit: 'MONTHLY'
        bullets:
        - 'AliCloud Deployment'
        - '128 MB Memory'
        - '100 MB Disk'

  #############################
  # ALICLOUD APSARADB SERVICE #
  #############################
  - id: '33731fb8-7b84-4f57-914f-c3d55d793dd4'
    name: 'pg-crunchydata'
    description: &description 'PostgreSQL Crunchy Data on K8S provisioned by Service Fabrik'
    bindable: true
    tags:
    - 'k8s'
    - 'no-not-use'
    metadata:
      displayName: 'PGCrunchy'
      longDescription: *description
      providerDisplayName: 'PostgreSQL Crunchy DB'
      documentationUrl: 'https://pgcrunchy.com/'
      supportUrl: 'https://pgcrunchy.com/'
    dashboard_client:
      id: 'service-fabrik-pgk8s-client'
      secret: 'service-fabrik-pgk8s-secret'
      redirect_uri: <%= redirect_uri %>
    plan_updateable: true
    supported_platform:
    - k8s
    - cf
    plans:
    ###########################
    #      SERVICE PLANS      #
    ###########################
    - id: '366c5078-df6e-427d-8fb2-b76af50c0f56'
      name: 'v1.0'
      free: true
      manager:
        name: 'basic'
        async: true
        resource_mappings:
          resource_group: 'deployment.servicefabrik.io'
          resource_type: 'kubes'
          bind:
            resource_group: 'bind.servicefabrik.io'
            resource_type: 'kubebinds'
      description: 'PostgreSQL Crunchy Data on K8S provisioned by Service Fabrik'
      metadata:
        costs:
        - amount:
            usd: 0.0
          unit: 'MONTHLY'
        bullets:
        - 'K8S Deployment'
        - '128 MB Memory'
        - '100 MB Disk'

  #####################
  # BLUEPRINT SERVICE #
  #####################
  - &blueprint_service
    id: '24731fb8-7b84-4f57-914f-c3d55d793dd4'
    name: 'blueprint'
    description: &description 'Blueprint service for internal development, testing, and documentation purposes of the Service Fabrik'
    bindable: true
    tags:
    - 'blueprint'
    - 'no-not-use'
    metadata:
      displayName: 'Blueprint'
      longDescription: *description
      providerDisplayName: 'SAP SE'
      documentationUrl: 'https://sap.com/'
      supportUrl: 'https://sap.com/'
    dashboard_client:
      id: 'service-fabrik-blueprint-client'
      secret: 'service-fabrik-blueprint-secret'
      redirect_uri: <%= redirect_uri %>
    plan_updateable: true
    supported_platform:
    - k8s
    - cf
    #actions: Blueprint
    backup_interval: '8 hours'
    pitr: true
    plans:
    ###########################
    # CONTAINER SERVICE PLANS #
    ###########################
    - &blueprint_plan1
      id: '466c5078-df6e-427d-8fb2-c76af50c0f56'
      name: 'v1.0-dev'
      free: true
      manager:
        name: 'docker'
        async: false
        resource_mappings: &docker_resource_mappings
          resource_group: 'deployment.servicefabrik.io'
          resource_type: 'dockers'
          bind:
            resource_group: 'bind.servicefabrik.io'
            resource_type: 'dockerbinds'
        settings:
          image: 'servicefabrikjenkins/blueprint'
          tag: 'latest'
          memory: '128m'
          persistent_volumes:
          - name: 'data'
            path: '/data'
            size: '100m'
      credentials:
        username:
          key: 'BLUEPRINT_USER_NAME'
        password:
          key: 'BLUEPRINT_USER_PASS'
        uri:
          prefix: 'http'
          port: 8080/tcp
      description: 'Blueprint 1.0 service running inside a Docker container (for non-productive usage)'
      metadata:
        costs:
        - amount:
            usd: 0.0
          unit: 'MONTHLY'
        bullets:
        - 'Container Deployment'
        - '128 MB Memory'
        - '100 MB Disk'
    - &blueprint_plan2
      id: '6a252f89-c974-4ef9-a4de-c49f300de39a'
      name: 'v1.0-dev-large'
      free: true
      manager:
        name: 'docker'
        async: false
        resource_mappings: *docker_resource_mappings
        settings:
          image: 'servicefabrikjenkins/blueprint'
          tag: 'latest'
          memory: '256m'
          persistent_volumes:
          - name: 'data'
            path: '/data'
            size: '200m'
      credentials:
        username:
          key: 'BLUEPRINT_USER_NAME'
        password:
          key: 'BLUEPRINT_USER_PASS'
        uri:
          prefix: 'http'
          port: 8080/tcp
      description: 'Blueprint 1.0 service running inside a large Docker container (for non-productive usage)'
      metadata:
        costs:
        - amount:
            usd: 0.0
          unit: 'MONTHLY'
        bullets:
        - 'Container Deployment'
        - '256 MB Memory'
        - '200 MB Disk'
    - &blueprint_plan7
      id: '61a8d1f7-6477-4eb7-a85d-57ac067e80c4'
      name: 'v1.0-container-large-deprecated'
      free: true
      manager:
        name: 'docker'
        async: false
        resource_mappings: *docker_resource_mappings
        settings:
          image: 'servicefabrikjenkins/blueprint'
          tag: 'latest'
          memory: '256m'
          persistent_volumes:
          - name: 'data'
            path: '/data'
            size: '200m'
      credentials:
        username:
          key: 'BLUEPRINT_USER_NAME'
        password:
          key: 'BLUEPRINT_USER_PASS'
        uri:
          prefix: 'http'
          port: 8080/tcp
      description: 'Blueprint 1.0 service running inside a large Docker container (for non-productive usage)'
      metadata:
        state: deprecated
        costs:
        - amount:
            usd: 0.0
          unit: 'MONTHLY'
        bullets:
        - 'Container Deployment'
        - '256 MB Memory'
        - '200 MB Disk'
    ###########################
    # DEDICATED SERVICE PLANS #
    ###########################
    - &blueprint_plan3
      id: 'bc158c9a-7934-401e-94ab-057082a5073f'
      name: 'v1.0-xsmall'
      free: false
      #actions: ReserveIps
      manager: &manager_plan3
        name: 'director'
        async: true
        resource_mappings: &director_resource_mappings
          resource_group: 'deployment.servicefabrik.io'
          resource_type: 'directors'
          bind:
            resource_group: 'bind.servicefabrik.io'
            resource_type: 'directorbinds'
          backup:
            resource_group: 'backup.servicefabrik.io'
            resource_type: 'defaultbackups'
        settings: &settings_plan3
          prefix: 'blueprint'
          agent: *agent_blueprint
          template: <%= base64_template('templates/blueprint-manifest.yml.ejs') %>
          dashboard_template: <%= base64_template('templates/blueprint-dashboard.yml.ejs') %>
          releases: &dedicated_releases
          - { name: blueprint, version: latest, git: "https://github.com/sap/service-fabrik-blueprint-boshrelease.git" }
          context: &context_plan3
            agent: *agent_blueprint
            disk_type: 1GB
            vm_type: default
      description: 'Blueprint 1.0 service x-small (managed service in beta)'
      metadata:
        costs:
        - amount:
            usd: 0.0
          unit: 'MONTHLY'
        bullets:
        - 'Dedicated Deployment'
        - '1 VM'
        - '1 vCPUs'
        - '1 GB Memory'
        - '1 GB Disk'
      supported_platform:
      - k8s
      - cf
    - &blueprint_plan4
      id: 'bc158c9a-7934-401e-94ab-057082a5073e'
      name: 'v1.0-small'
      free: false
      manager: &manager_plan4
        name: 'director'
        async: true
        resource_mappings: *director_resource_mappings
        settings: &settings_plan4
          prefix: 'blueprint'
          agent: *agent_blueprint
          update_predecessors:
          - 'bc158c9a-7934-401e-94ab-057082a5073f'
          template: <%= base64_template('templates/blueprint-manifest.yml.ejs') %>
          releases: *dedicated_releases
          context: &context_plan4
            agent: *agent_blueprint
            vm_type: default
            disk_type: 5GB
      description: 'Blueprint 1.0 service small (managed service in beta)'
      metadata:
        costs:
        - amount:
            usd: 0.0
          unit: 'MONTHLY'
        bullets:
        - 'Dedicated Deployment'
        - '1 VM'
        - '1 vCPUs'
        - '1 GB Memory'
        - '2 GB Disk'
      supported_platform:
      - k8s
      - cf
    - &blueprint_plan5
      id: 'd616b00a-5949-4b1c-bc73-0d3c59f3954a'
      name: 'v1.0-large'
      free: false
      manager: &manager_plan5
        name: 'director'
        async: true
        resource_mappings: *director_resource_mappings
        settings: &settings_plan5
          prefix: 'blueprint'
          agent: *agent_blueprint
          update_predecessors:
          - 'bc158c9a-7934-401e-94ab-057082a5073f'
          - 'bc158c9a-7934-401e-94ab-057082a5073e'
          template: <%= base64_template('templates/blueprint-manifest.yml.ejs') %>
          releases: *dedicated_releases
          context: &context_plan5
            agent: *agent_blueprint
            vm_type: default
            disk_type: 10GB
      description: 'Blueprint 1.0 service large (managed service in beta)'
      metadata:
        costs:
        - amount:
            usd: 0.0
          unit: 'MONTHLY'
        bullets:
        - 'Dedicated Deployment'
        - '1 VM'
        - '1 vCPUs'
        - '2 GB Memory'
        - '2 GB Disk'
      supported_platform:
      - k8s
      - cf
    - &blueprint_plan8
      id: 'gd158c9a-7934-401e-94ab-057082a5073e'
      name: 'v2.0-xsmall'
      free: false
      manager: &manager_plan7
        name: 'director'
        async: true
        resource_mappings: *director_resource_mappings
        settings: &settings_plan7
          prefix: 'blueprint'
          agent: *agent_blueprint
          update_predecessors:
          - 'bc158c9a-7934-401e-94ab-057082a5073f'
          template: <%= base64_template('templates/blueprint-manifest.yml.ejs') %>
          releases: *dedicated_releases
          context: &context_plan7
            agent: *agent_blueprint
            vm_type: default
            disk_type: 5GB
      description: 'Blueprint 2.0 service small (managed service in beta)'
      metadata:
        costs:
        - amount:
            usd: 0.0
          unit: 'MONTHLY'
        bullets:
        - 'Dedicated Deployment'
        - '1 VM'
        - '1 vCPUs'
        - '1 GB Memory'
        - '2 GB Disk'
      supported_platform:
      - k8s
      - cf
    - &blueprint_plan6
      id: 'b91d9512-b5c9-4c4a-922a-fa54ae67d235'
      name: 'v1.0-dedicated-large-deprecated'
      free: false
      manager: &manager_plan6
        name: 'director'
        async: true
        resource_mappings: *director_resource_mappings
        settings: &settings_plan6
          prefix: 'blueprint'
          agent: *agent_blueprint
          update_predecessors:
          - 'bc158c9a-7934-401e-94ab-057082a5073f'
          template: <%= base64_template('templates/blueprint-manifest.yml.ejs') %>
          releases: *dedicated_releases
          context: &context_plan6
            agent: *agent_blueprint
            vm_type: micro
            disk_type: disk_2G
      description: 'Blueprint 1.0 service large (managed service in beta)'
      metadata:
        state: deprecated
        costs:
        - amount:
            usd: 0.0
          unit: 'MONTHLY'
        bullets:
        - 'Dedicated Deployment'
        - '1 VM'
        - '1 vCPUs'
        - '2 GB Memory'
        - '2 GB Disk'
  ####################
  # RABBITMQ SERVICE #
  ####################
  - &rabbitmq_service
    id: '19f17a7a-5247-4ee2-94b5-03eac6756388'
    name: 'rabbitmq'
    description: &description 'RabbitMQ messaging'
    bindable: true
    tags:
    - 'rabbitmq'
    - 'mbus'
    - 'pubsub'
    - 'amqp'
    metadata:
      displayName: 'rabbitmq'
      longDescription: *description
      providerDisplayName: 'SAP SE'
      documentationUrl: 'https://www.rabbitmq.com/documentation.html'
      supportUrl: 'https://www.rabbitmq.com/community.html'
    dashboard_client:
      id: 'service-fabrik-rabbitmq-client1'
      secret: 'service-fabrik-rabbitmq-secret1'
      redirect_uri: <%= redirect_uri %>
    plan_updateable: true
    plans:
    ###########################
    # DEDICATED SERVICE PLANS #
    ###########################
    - &rabbitmq_plan1
      id: 'b715f834-2048-11e7-a560-080027afc1e6'
      name: 'v3.6-xsmall'
      free: false
      manager: &manager_plan9
        name: 'director'
        async: true
        resource_mappings: *director_resource_mappings
        settings: &settings_plan9
          prefix: 'rabbitmq'
          agent: *agent_rabbitmq
          template: <%= base64_template('templates/rabbitmq-manifest.yml.ejs') %>
          releases: &dedicated_releases
          - { name: rabbitmq, version: 25 }
          # An agent running in the deployment should implement Service Fabrik Agent APIs listed here https://cloudfoundry-incubator.github.io/service-fabrik-broker/api/agent_v1.1.html
          - { name: broker-agent-rabbitmq, version: 36 }
          context: &context_plan9
            agent: *agent_rabbitmq
            disk_type: 1GB
            vm_type: default
            rabbitmq:
              instances: 3
              version: "3.6"
              vm_type: minimal
              disk_type: 1GB
              mqtt_enabled: false
              stomp_enabled: false
              amqp1_0_enabled: false
              policy_definition: {"ha-mode":"all","ha-sync-mode":"automatic"}
            erlang:
              version: "19.3"
            haproxy:
              vm_type: minimal
              disk_type: 1GB
      description: 'RabbitMQ 3.6 service x-small'
      metadata:
        costs:
        - amount:
            usd: 0.0
          unit: 'MONTHLY'
        bullets:
        - 'Dedicated Deployment'
        - '3 Node Cluster'
        - '1 GB Memory'
        - '10 GB Disk'
    - &rabbitmq_plan2
      id: '0c59fe4b-7b2d-4db9-9a9f-8a889a592652'
      name: 'v3.7-xsmall'
      free: false
      manager: &manager_plan10
        name: 'director'
        async: true
        resource_mappings: *director_resource_mappings
        settings: &settings_plan10
          prefix: 'rabbitmq'
          agent: *agent_rabbitmq
          template: <%= base64_template('templates/rabbitmq-manifest.yml.ejs') %>
          releases: &dedicated_releases
          - { name: rabbitmq, version: 25 }
          # An agent running in the deployment should implement Service Fabrik Agent APIs listed here https://cloudfoundry-incubator.github.io/service-fabrik-broker/api/agent_v1.1.html
          - { name: broker-agent-rabbitmq, version: 36 }
          context: &context_plan9
            agent: *agent_rabbitmq
            disk_type: 1GB
            vm_type: default
            rabbitmq:
              instances: 3
              version: "3.7"
              vm_type: minimal
              disk_type: 1GB
              mqtt_enabled: false
              stomp_enabled: false
              amqp1_0_enabled: false
              policy_definition: {"ha-mode":"all","ha-sync-mode":"automatic"}
            erlang:
              version: "20.3"
            haproxy:
              vm_type: minimal
              disk_type: 1GB
      description: 'RabbitMQ 3.7 service x-small'
      metadata:
        costs:
        - amount:
            usd: 0.0
          unit: 'MONTHLY'
        bullets:
        - 'Dedicated Deployment'
        - '3 Node Cluster'
        - '1 GB Memory'
        - '10 GB Disk'

    ###########################
    # SHARED SERVICE PLANS #
    ###########################
    - &shared_plan1
      id: 'd035f948-5d3a-43d7-9aec-954e134c3e9d'
      name: 'virtualhost'
      free: true
      manager: &virtual_host_manager
        name: 'virtual_host'
        resource_mappings:
          resource_group: 'deployment.servicefabrik.io'
          resource_type: 'virtualhosts'
          bind:
            resource_group: 'bind.servicefabrik.io'
            resource_type: 'virtualhostbinds'
        settings: &settings_virtual_host
          prefix: 'rabbitmq'
          agent: *agent_rabbitmq
          context: &context_plan7
            agent: *agent_rabbitmq
      description: 'Virtual host in a RabbitMQ cluster (managed service in beta)'
      metadata:
        skip_quota_check: true
        costs:
        - amount:
            usd: 0.0
          unit: 'MONTHLY'
        bullets:
        - 'Shared Deployment'
        - '1 VirtualHost'


development: &development
  <<: *defaults
  log_level: debug
  password: 'secret'
  directors:
  - <<: *director
    cpi: aws_cpi
    primary: true
    support_create: true
    name: bosh
    uuid: b7e651e2-3afe-471f-9bca-93048fa591f4
    infrastructure: &test_infrastructure
      <<: *director_infrastructure
  agents:
    <<: *agents
    blueprint: &agent_blueprint1
      version: '1'
      hostname: <%= process.env.BLUEPRINT_AGENT_HOSTNAME || '~' %>
      auth:
        username: agent
        password: secret
      supported_features:
      - state
      - lifecycle
      - credentials
      - lifecycle.blueprint
    rabbitmq: &agent_rabbitmq1
      version: '1'
      hostname: <%= process.env.RABBITMQ_AGENT_HOSTNAME || '~' %>
      auth:
        username: agent
        password: secret
      supported_features:
      - state
      - lifecycle
      - credentials
      - multi_tenancy

boshlite2:
  <<: *development
  log_level: debug
  password: 'secret'
  cf:
    <<: *cf
    password: cf_password
  directors:
  - <<: *director
    url: https://192.168.50.6:25555
    password: xxxxxxxxxxx
    primary: true
    support_create: true
    infrastructure:
      <<: *director_infrastructure
      networks:
      - name: default
        type: manual
        subnets:
        - { range: 10.244.11.0/20, az: z1, cloud_properties: { name: random } }
        - { range: 10.244.12.0/20, az: z2, cloud_properties: { name: random } }
        - { range: 10.244.13.0/20, az: z3, cloud_properties: { name: random } }

azure_dev1: &azure_dev1
  <<: *defaults
  log_level: debug
  password: 'secret'
  directors:
  - <<: *director
    prefix: service-fabrik-azure-dev1
    url: https://127.0.0.1:35555
    password: admin
    primary: true
    support_create: true
    infrastructure:
      <<: *director_infrastructure
      stemcell:
        alias: ubuntu-trusty
        name: bosh-azure-hyperv-ubuntu-trusty-go_agent
        version: latest
      networks:
      - name: default
        type: manual
        subnets:
        - range: 10.11.0.0/18
          az: z1
          cloud_properties:
            security_group: nsg-open-sf-azure-dev1
            subnet_name: sf-1-bosh_services_z2-sf-azure-dev1
            virtual_network_name: vnet-sf-azure-dev1
      - &fabrik_network
        name: service_fabrik
        type: manual
        segmentation:
          # calculate capacity based on the network range
          capacity: -1
          offset: 1
          size: 10
        subnets:
        - { range: 10.11.252.0/24, az: z1, cloud_properties: { net_id: b7089c41-e529-4044-943b-174b92ad6074, security_groups:[service-fabrik] } }
        - { range: 10.11.253.0/24, az: z2, cloud_properties: { net_id: b7089c41-e529-4044-943b-174b92ad6074, security_groups:[service-fabrik] } }
        - { range: 10.11.254.0/24, az: z3, cloud_properties: { net_id: b7089c41-e529-4044-943b-174b92ad6074, security_groups:[service-fabrik] } }

development_sc6: &sc6
  <<: *defaults
  log_level: debug
  password: 'secret'
  directors:
  - <<: *director
    prefix: service-fabrik-backup
    support_create: true
    url: https://127.0.0.1:25555
    primary: true
    infrastructure:
      <<: *director_infrastructure
      stemcell:
        alias: ubuntu-trusty
        name: bosh-openstack-kvm-ubuntu-trusty-go_agent
        version: latest
      networks:
      - name: default
        type: manual
        subnets:
        - range: 10.11.0.0/18
          az: z1
          cloud_properties:
            net_id: 6bfbdf39-4a91-4d23-9093-dde1d6924791
            security_groups:
            - service-fabrik-bosh-services
            subnet: 5757fec6-0566-4c97-8f37-e15c097f0d63
      - &fabrik_network
        name: service_fabrik
        type: manual
        segmentation:
          # calculate capacity based on the network range
          capacity: -1
          offset: 1
          size: 10
        subnets:
        - { range: 10.11.252.0/24, az: z1, cloud_properties: { net_id: b7089c41-e529-4044-943b-174b92ad6074, security_groups:[service-fabrik] } }
        - { range: 10.11.253.0/24, az: z2, cloud_properties: { net_id: b7089c41-e529-4044-943b-174b92ad6074, security_groups:[service-fabrik] } }
        - { range: 10.11.254.0/24, az: z3, cloud_properties: { net_id: b7089c41-e529-4044-943b-174b92ad6074, security_groups:[service-fabrik] } }

development_aws:
  env: &resource_pool_env
    bosh:
      password: password
  <<: *defaults
  log_level: debug
  password: 'secret'
  directors:
  - <<: *director
    url: https://127.0.0.1:25557
    infrastructure:
      <<: *director_infrastructure
      stemcell:
        alias: ubuntu-trusty
        name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
        version: latest
      networks:
      - name: default
        type: manual
        subnets:
        - az: z1
          range: 10.11.0.0/18
          cloud_properties:
            subnet: subnet-92c928fa
            security_groups:
            - sg-14644d7c
        - az: z2
          range: 10.11.64.0/18
          cloud_properties:
            subnet: subnet-4faa9634
            security_groups:
            - sg-14644d7c

production:
  <<: *defaults
  password: 'secret'

test:
  <<: *defaults
  log_level: debug
  enable_circuit_breaker: false
  external:
    <<: *external
    protocol: 'http'
    cookie_secure: false
  docker:
    <<: *docker
    url: 'https://192.168.99.100:2376'
  directors:
  - <<: *director
    cpi: aws_cpi
    primary: true
    support_create: true
    name: bosh
    uuid: b7e651e2-3afe-471f-9bca-93048fa591f4
    infrastructure: &test_infrastructure
      <<: *director_infrastructure
      networks:
      - *default_network
      - *fabrik_network
  password: 'secret'
